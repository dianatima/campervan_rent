{"version":3,"file":"static/js/634.3af5a0b5.chunk.js","mappings":"+MAEaA,E,QAAgBC,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uO,qECOxB,SAASC,IACtB,IAAAC,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAE5BI,GAAWC,EAAAA,EAAAA,MAEXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAUF,EAAAA,EAAAA,IAAYG,EAAAA,KAE5BC,EAAAA,EAAAA,YAAU,WACRP,GAASQ,EAAAA,EAAAA,KACX,GAAG,CAACR,KAEJO,EAAAA,EAAAA,YAAU,WACJE,aAAaC,QAAQ,mBACvBX,EAAeY,KAAKC,MAAMH,aAAaC,QAAQ,mBAEnD,GAAG,IAEH,IAAMG,EAAiB,SAACC,GACtBf,GAAe,SAACgB,GACd,IAAMC,EAAeD,EAAKE,QAAO,SAACC,GAAE,OAAKA,IAAOJ,CAAE,IAElD,OADAL,aAAaU,QAAQ,iBAAkBR,KAAKS,WAASC,EAAAA,EAAAA,GAAKL,MAC1DK,EAAAA,EAAAA,GAAWL,EACb,GACF,EAEMM,GAAanB,EAAAA,EAAAA,IAAYoB,EAAAA,IAE/B,OACEC,EAAAA,EAAAA,MAACnC,EAAa,CAAAoC,SAAA,CACXvB,IAAcG,IAAWqB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IAChCtB,IAAYH,IACXwB,EAAAA,EAAAA,KAACE,EAAAA,GAAY,CAAAH,SAAC,oCAEdvB,IACAwB,EAAAA,EAAAA,KAAAG,EAAAA,SAAA,CAAAJ,SACG3B,EAAYgC,OACXR,EACGL,QAAO,SAACc,GAAM,OAAKjC,EAAYkC,SAASD,EAAOE,IAAI,IACnDC,KAAI,SAACH,GACJ,OACEL,EAAAA,EAAAA,KAACS,EAAAA,EAAU,CAETJ,OAAQA,EACRK,SAAUtC,EACVe,eAAgBA,GAHXkB,EAAOE,IAMlB,KAEFP,EAAAA,EAAAA,KAACE,EAAAA,GAAY,CAAAH,SAAC,mEAQ1B,C","sources":["pages/Favorites/Favorites.styled.jsx","pages/Favorites/Favorites.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const FavoritesWrap = styled.div`\n    padding-top: 100px;\n    margin-left: auto;\n    margin-right: auto;\n    width: 888px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    gap: 32px;\n`;","import { fetchAdverts } from \"../../redux/advertsOperations\";\nimport { FavoritesWrap } from \"./Favorites.styled\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllAdverts, getIsLoading, getError } from \"../../redux/selectors\";\nimport { NoCamperText } from \"../../components/CamperList/CamperList.styled\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { CamperItem } from \"components/CamperItem/CamperItem\";\n\nexport default function Favorites() {\n  const [allFavorite, setAllFavorite] = useState([]);\n\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(getIsLoading);\n  const isError = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchAdverts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"favoritesArray\")) {\n      setAllFavorite(JSON.parse(localStorage.getItem(\"favoritesArray\")));\n    }\n  }, []);\n\n  const removeFavorite = (id) => {\n    setAllFavorite((prev) => {\n      const filteredPrev = prev.filter((el) => el !== id);\n      localStorage.setItem(\"favoritesArray\", JSON.stringify([...filteredPrev]));\n      return [...filteredPrev];\n    });\n  };\n\n  const allAdverts = useSelector(getAllAdverts);\n\n  return (\n    <FavoritesWrap>\n      {isLoading && !isError && <Loader />}\n      {isError && !isLoading && (\n        <NoCamperText>Upsssc... Something goes wrong</NoCamperText>\n      )}\n      {!isLoading && (\n        <>\n          {allFavorite.length ? (\n            allAdverts\n              .filter((advert) => allFavorite.includes(advert._id))\n              .map((advert) => {\n                return (\n                  <CamperItem\n                    key={advert._id}\n                    advert={advert}\n                    favorite={allFavorite}\n                    removeFavorite={removeFavorite}\n                  />\n                );\n              })\n          ) : (\n            <NoCamperText>\n              Please go to the Catalog and choose the campervan you like\n            </NoCamperText>\n          )}\n        </>\n      )}\n    </FavoritesWrap>\n  );\n}\n"],"names":["FavoritesWrap","styled","_templateObject","_taggedTemplateLiteral","Favorites","_useState","useState","_useState2","_slicedToArray","allFavorite","setAllFavorite","dispatch","useDispatch","isLoading","useSelector","getIsLoading","isError","getError","useEffect","fetchAdverts","localStorage","getItem","JSON","parse","removeFavorite","id","prev","filteredPrev","filter","el","setItem","stringify","_toConsumableArray","allAdverts","getAllAdverts","_jsxs","children","_jsx","Loader","NoCamperText","_Fragment","length","advert","includes","_id","map","CamperItem","favorite"],"sourceRoot":""}